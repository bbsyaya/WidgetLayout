//所有的arr统一放在aar目录下
repositories {
    flatDir {
        dirs '../libs/aar', '../libs/lib'
    }
}
tasks.whenTaskAdded { task ->
    if (task.name.contains('AndroidTest') || task.name.contains('UnitTest') || task.name.equals('test')) {
        task.enabled = false
    }
}
android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
            jniLibs.srcDirs = ['libs']
        }

        // Move the tests to tests/java, tests/res, etc...
        instrumentTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }

//    sourceSets.release.jniLibs.srcDirs = ['libs']
//    sourceSets.debug.jniLibs.srcDirs = ['libs']
    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/dependencies'
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/license'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/notice'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/README.txt'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        exclude '!META-INF/MANIFEST.MF'
        exclude 'META-INF/MANIFEST.MF'
    }
    dexOptions {
        javaMaxHeapSize "4g"
        //preDexLibraries = false   // android support v4加了两次，暂时注释
        //incremental = false
        //jumboMode = false
    }

    lintOptions {
        quiet true
        checkReleaseBuilds false
        abortOnError false //执行lint检查，有任何的错误或者警告提示，都会终止构建，我们可以将其关掉。
    }

    aaptOptions {
        noCompress 'foo', 'bar'
        ignoreAssetsPattern "!.svn:!.git:!.ds_store:!*.scc:.*:<dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"
    }
    useLibrary 'org.apache.http.legacy'
}

//
//task compileAidl << {
//    FileTree aidls = fileTree('src/main/aidl').include('**/I*.aidl')
//    aidls.each {File aidl ->
//        def shell = ("aidl -p${android.sdk}/platforms/${android.target}/framework.aidl "
//                + "-I${file('src/main/aidl')} "
//                + "-o${file('build/source/aidl/debug')} "
//                + "${aidl.absolutePath}")
//        def proc = shell.execute()
//        proc.in.eachLine {line -> println line}
//        proc.err.eachLine {line -> println 'stderr: ' + line}
//        proc.waitFor()
//    }
//}
//
//compileJava.dependsOn(compileAidl)

/***以下是一些基本方法可选****/

//// 代码规范检查
//checkstyle {
//    ignoreFailures = true
//    sourceSets = [sourceSets.main]
//}
//
////findbugs 代码优化bug查找
//findbugs {
//    ignoreFailures = true
//    sourceSets = [sourceSets.main]
//}
//
////代码bug查找检查
//pmd {
////    ruleSets = ["basic", "braces", "design"]
//    ignoreFailures = true
//    sourceSets = [sourceSets.main]
//}
//
////Jacoco是一个开源的覆盖率工具 for test
//jacocoTestReport {
//    reports {
//        xml.enabled true
//        html.enabled true
//        csv.enabled false
//    }
//    sourceSets sourceSets.main
//}


